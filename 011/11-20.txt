11. Container with most water:
brute force O(n^2) will TLE
two pointer solution is good, O(n). we can discard the shorter one since all of the other pairs containing the shorter one don’t matter

12. Integer to Roman:
looks stupid, takes about 40 lines using silly method
could be much more beautiful using list to save each digit

13. Roman to Integer
Nothing special, similar to 12
declare dict with some key value : d = {k1 : v1, k2 : v2}

14. Longest Common Prefix
find the shortest string, compare other string with it. If different, return shortest[:i].
shortest = min(strs, key=len)
testcase : []    (empty)

15. 3Sum
sort first. use ith element as the first number, perform 2Sum in the range i+1 to len(nums)-1
repeating nums are annoying. each i’th num has to compare with the previous one. so does l and r. We cannot use set to deal with the output since lists are not hashable.
O(n^2)

16. 3Sum Closest
Using the means similar to 3Sum, nothing special.

17. Letter Combination of a Phone Number
backtracking
remember to convert digit to int (it was char originally)
remove the last character of string : s = s[:-1]
also can solve the problem iteratively

18. 4Sum
Like 3 sum, but 2 for loops outside the final 2Sum. For N sum problems, we can solve it recursively and finally make it to 2Sum.

19. Remove nth node from end of List
slow = fast = res = ListNode(0), res.next = head
fast move n+1 forward before slow move

20. Valid Parenthesis
test case : (  ,  ((,   ]
